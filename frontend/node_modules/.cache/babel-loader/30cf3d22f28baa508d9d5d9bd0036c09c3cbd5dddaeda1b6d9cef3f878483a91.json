{"ast":null,"code":"var _jsxFileName = \"/Users/ayenikoemmanuel/Downloads/React/router-react-2/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEventPage from \"./routes/EditEvent\";\nimport ErrorPage from \"./routes/Error\";\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from \"./routes/EventDetail\";\nimport EventsPage, { loader as eventsLoader } from \"./routes/Events\";\nimport EventsRootLayout from \"./routes/EventsRoot\";\nimport HomePage from \"./routes/Home\";\nimport NewEventPage from \"./routes/NewEvent\";\nimport RootLayout from \"./routes/Root\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: \":eventId\",\n      id: \"event-detail\",\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }, this),\n      action: manipulateEventAction\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEventPage","ErrorPage","EventDetailPage","loader","eventDetailLoader","action","deleteEventAction","EventsPage","eventsLoader","EventsRootLayout","HomePage","NewEventPage","RootLayout","manipulateEventAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["/Users/ayenikoemmanuel/Downloads/React/router-react-2/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEventPage from \"./routes/EditEvent\";\nimport ErrorPage from \"./routes/Error\";\nimport EventDetailPage, {\n  loader as eventDetailLoader,\n  action as deleteEventAction,\n} from \"./routes/EventDetail\";\nimport EventsPage, { loader as eventsLoader } from \"./routes/Events\";\nimport EventsRootLayout from \"./routes/EventsRoot\";\nimport HomePage from \"./routes/Home\";\nimport NewEventPage from \"./routes/NewEvent\";\nimport RootLayout from \"./routes/Root\";\nimport { action as manipulateEventAction } from \"./components/EventForm\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: \"events\",\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: \":eventId\",\n            id: \"event-detail\",\n            loader: eventDetailLoader,\n            children: [\n              {\n                index: true,\n                element: <EventDetailPage />,\n                action: deleteEventAction,\n              },\n              {\n                path: \"edit\",\n                element: <EditEventPage />,\n                action: manipulateEventAction,\n              },\n            ],\n          },\n\n          {\n            path: \"new\",\n            element: <NewEventPage />,\n            action: manipulateEventAction,\n          },\n        ],\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,eAAe,IACpBC,MAAM,IAAIC,iBAAiB,EAC3BC,MAAM,IAAIC,iBAAiB,QACtB,sBAAsB;AAC7B,OAAOC,UAAU,IAAIJ,MAAM,IAAIK,YAAY,QAAQ,iBAAiB;AACpE,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,UAAU,MAAM,eAAe;AACtC,SAASP,MAAM,IAAIQ,qBAAqB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,MAAM,GAAGjB,mBAAmB,CAAC,CACjC;EACEkB,IAAI,EAAE,EAAE;EACRC,OAAO,eAAEH,OAAA,CAACH,UAAU;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EACvBC,YAAY,eAAER,OAAA,CAACd,SAAS;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;EAC3BE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACL,QAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI,CAAC,EACtC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACN,gBAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IAC7BE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXP,OAAO,eAAEH,OAAA,CAACR,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;MACvBnB,MAAM,EAAEK;IACV,CAAC,EACD;MACES,IAAI,EAAE,UAAU;MAChBS,EAAE,EAAE,cAAc;MAClBvB,MAAM,EAAEC,iBAAiB;MACzBoB,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,IAAI;QACXP,OAAO,eAAEH,OAAA,CAACb,eAAe;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QAC5BjB,MAAM,EAAEC;MACV,CAAC,EACD;QACEW,IAAI,EAAE,MAAM;QACZC,OAAO,eAAEH,OAAA,CAACf,aAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QAC1BjB,MAAM,EAAEQ;MACV,CAAC;IAEL,CAAC,EAED;MACEI,IAAI,EAAE,KAAK;MACXC,OAAO,eAAEH,OAAA,CAACJ,YAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;MACzBjB,MAAM,EAAEQ;IACV,CAAC;EAEL,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASc,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAACjB,cAAc;IAACkB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAC3C;AAACM,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}