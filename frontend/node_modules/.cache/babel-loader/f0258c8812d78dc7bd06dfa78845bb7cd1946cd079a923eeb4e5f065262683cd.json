{"ast":null,"code":"var _jsxFileName = \"/Users/ayenikoemmanuel/Downloads/React/router-react-2/frontend/src/routes/Events.jsx\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: \"Could not fetch events\"\n    };\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","EventsPage","_s","data","isError","children","error","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","$RefreshReg$"],"sources":["/Users/ayenikoemmanuel/Downloads/React/router-react-2/frontend/src/routes/Events.jsx"],"sourcesContent":["import EventsList from \"../components/EventsList\";\n\nimport { useLoaderData } from \"react-router-dom\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n\n  if (data.isError) {\n    return <p>{error.message}</p>;\n  }\n  const events = data.events;\n\n  return <EventsList events={events} />;\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    return { isError: true, message: \"Could not fetch events\" };\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AAEjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGL,aAAa,EAAE;EAE5B,IAAIK,IAAI,CAACC,OAAO,EAAE;IAChB,oBAAOJ,OAAA;MAAAK,QAAA,EAAIC,KAAK,CAACC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC/B;EACA,MAAMC,MAAM,GAAGT,IAAI,CAACS,MAAM;EAE1B,oBAAOZ,OAAA,CAACH,UAAU;IAACe,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACvC;AAACT,EAAA,CATQD,UAAU;EAAA,QACJH,aAAa;AAAA;AAAAe,EAAA,GADnBZ,UAAU;AAWnB,eAAeA,UAAU;AAEzB,OAAO,eAAea,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAAEb,OAAO,EAAE,IAAI;MAAEG,OAAO,EAAE;IAAyB,CAAC;EAC7D,CAAC,MAAM;IACL;IACA;IACA,OAAOQ,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}