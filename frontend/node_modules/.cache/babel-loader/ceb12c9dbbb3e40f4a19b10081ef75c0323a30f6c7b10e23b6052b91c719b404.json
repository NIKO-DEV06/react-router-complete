{"ast":null,"code":"var _jsxFileName = \"/Users/ayenikoemmanuel/Downloads/React/router-react-2/frontend/src/routes/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport EventItem from \"../components/EventItem\";\nimport { json, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhose:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","EventItem","json","useLoaderData","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","$RefreshReg$"],"sources":["/Users/ayenikoemmanuel/Downloads/React/router-react-2/frontend/src/routes/EventDetail.jsx"],"sourcesContent":["import React from \"react\";\n\nimport EventItem from \"../components/EventItem\";\nimport { json, useLoaderData } from \"react-router-dom\";\n\nconst EventDetailPage = () => {\n  const data = useLoaderData();\n\n  return <EventItem event={data.event} />;\n};\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhose:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json({ message: \"Could not fetch details for selected event.\" });\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGL,aAAa,EAAE;EAE5B,oBAAOE,OAAA,CAACJ,SAAS;IAACQ,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACzC,CAAC;AAACN,EAAA,CAJID,eAAe;EAAA,QACNH,aAAa;AAAA;AAAAW,EAAA,GADtBR,eAAe;AAMrB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAA8C,CAAC,CAAC;EACxE,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF;AAAC,IAAAP,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}